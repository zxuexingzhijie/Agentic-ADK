<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.alibaba</groupId>
	<artifactId>ali-langengine</artifactId>
	<version>1.2.6-202508111516</version>
	<packaging>pom</packaging>
	<name>ali-langengine</name>
	<description>Alibaba LangEngine is an AI application development framework written in Java.</description>
	<url>https://github.com/AIDC-AI/Agentic-ADK</url>

	<scm>
		<url>https://github.com/AIDC-AI/Agentic-ADK</url>
		<connection>scm:git:https://git@github.com/AIDC-AI/Agentic-ADK.git</connection>
	</scm>

	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>sunleepy</id>
			<name>sunleepy</name>
			<email>sunleepy@gmail.com</email>
			<organizationUrl>https://alibaba.com</organizationUrl>
		</developer>
	</developers>

	<properties>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jacoco-plugin.version>0.8.8</jacoco-plugin.version>
		<maven-antrun.version>1.8</maven-antrun.version>
		<maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
		<spring-boot.version>2.5.12</spring-boot.version>
		<springframework.version>5.3.31</springframework.version>
		<junit5.version>5.11.0</junit5.version>
		<!-- overridden by submodule that need skip deploy -->
		<maven.deploy.skip>false</maven.deploy.skip>
		<root.basedir>${project.basedir}</root.basedir>
		<maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
		<flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
		<ali-agentic-adk.version>1.2.7-20250812</ali-agentic-adk.version>
	</properties>

	<modules>
		<module>ali-langengine-core</module>
<!--		<module>ali-agentic-adk-extension/ali-agentic-adk-computer-use</module>-->
		<!--		<module>ali-langengine-demo</module>-->

<!--		<module>ali-langengine-infrastructure/ali-langengine-docloader</module>-->
<!--		<module>ali-langengine-infrastructure/ali-langengine-tool</module>-->

<!--&lt;!&ndash;		<module>ali-langengine-infrastructure/ali-langengine-mcp</module>&ndash;&gt;-->

<!--		<module>ali-langengine-infrastructure/ali-langengine-deepsearch</module>-->
<!--		<module>ali-langengine-infrastructure/ali-langengine-gpt</module>-->
<!--		<module>ali-langengine-infrastructure/ali-langengine-mcp-jdk8</module>-->

<!--		<module>ali-langengine-community/ali-langengine-openai</module>-->
<!--		<module>ali-langengine-community/ali-langengine-azure</module>-->
<!--		<module>ali-langengine-community/ali-langengine-dashscope</module>-->
<!--		<module>ali-langengine-community/ali-langengine-gemini</module>-->
<!--		<module>ali-langengine-community/ali-langengine-vertexai</module>-->
<!--		<module>ali-langengine-community/ali-langengine-moonshot</module>-->
<!--		<module>ali-langengine-community/ali-langengine-minimax</module>-->
<!--		<module>ali-langengine-community/ali-langengine-duckdb</module>-->
<!--		<module>ali-langengine-community/ali-langengine-redis</module>-->
<!--		<module>ali-langengine-community/ali-langengine-hologres</module>-->
<!--		<module>ali-langengine-community/ali-langengine-adbpg</module>-->
<!--		<module>ali-langengine-community/ali-langengine-polardb</module>-->
<!--		<module>ali-langengine-community/ali-langengine-pinecone</module>-->
<!--		<module>ali-langengine-community/ali-langengine-milvus</module>-->
<!--		<module>ali-langengine-community/ali-langengine-chroma</module>-->
<!--		<module>ali-langengine-community/ali-langengine-djl</module>-->
<!--		<module>ali-langengine-community/ali-langengine-huggingface</module>-->
<!--		<module>ali-langengine-community/ali-langengine-sqlite</module>-->
<!--		<module>ali-langengine-community/ali-langengine-xingchen</module>-->
<!--		<module>ali-langengine-community/ali-langengine-xinghuo</module>-->
<!--		<module>ali-langengine-community/ali-langengine-msearch</module>-->
<!--		<module>ali-langengine-community/ali-langengine-autogen</module>-->
<!--		<module>ali-langengine-community/ali-langengine-metagpt</module>-->
<!--		<module>ali-langengine-community/ali-langengine-claude</module>-->
<!--		<module>ali-langengine-community/ali-langengine-lindorm</module>-->
<!--		<module>ali-langengine-community/ali-langengine-deepseek</module>-->
<!--		<module>ali-langengine-community/ali-langengine-openmanus</module>-->
<!--		<module>ali-langengine-community/ali-langengine-tablestore</module>-->
<!--		<module>ali-langengine-community/ali-langengine-jsonrepair</module>-->
		<module>ali-langengine-community/ali-langengine-tavily</module>
		<module>ali-langengine-community/ali-langengine-weaviate</module>
		<module>ali-agentic-adk-core</module>
		<module>ali-langengine-community/ali-langengine-aliyunaisearch</module>
		<module>ali-langengine-community/ali-langengine-sinanews</module>
		<module>ali-langengine-community/ali-langengine-weather</module>
        <module>ali-langengine-community/ali-langengine-bravesearch</module>
        <module>ali-langengine-community/ali-langengine-baidusearch</module>
        <module>ali-langengine-community/ali-langengine-baidu-translate</module>
        <module>ali-langengine-community/ali-langengine-youdao-translate</module>

        <!--		<module>ali-langengine-community/ali-langengine-opensearch</module>-->
<!--		<module>ali-langengine-community/ali-langengine-tair</module>-->
	</modules>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.17.0</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.9.4</version>
			</dependency>

			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<type>pom</type>
				<version>${junit5.version}</version>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.10.19</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>2.3-groovy-4.0</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.34</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.83</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.10</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>4.4</version>
			</dependency>

			<!-- unit test start -->
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>3.3.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-module-junit4</artifactId>
				<version>2.0.9</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.powermock</groupId>
				<artifactId>powermock-api-mockito2</artifactId>
				<version>2.0.9</version>
				<scope>test</scope>
			</dependency>
			<!-- unit test end -->

			<!-- retrofit start -->
			<!-- core used -->
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>retrofit</artifactId>
				<version>2.9.0</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>adapter-rxjava2</artifactId>
				<version>2.9.0</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.retrofit2</groupId>
				<artifactId>converter-jackson</artifactId>
				<version>2.9.0</version>
			</dependency>
			<!-- retrofit end -->

			<!-- okhttp3 start -->
			<!-- core used -->
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp</artifactId>
				<version>4.11.0</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>okhttp-sse</artifactId>
				<version>4.11.0</version>
			</dependency>
			<dependency>
				<groupId>com.squareup.okhttp3</groupId>
				<artifactId>logging-interceptor</artifactId>
				<version>4.11.0</version>
			</dependency>
			<!-- okhttp3 end -->

			<!-- guava localcache start -->
			<!-- core userd -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>32.0.0-android</version>
			</dependency>
			<!-- guava localcache end -->

			<!-- websocket start -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-websocket</artifactId>
				<version>2.5.12</version>
			</dependency>
			<!-- websocket end -->

			<!-- chatopenai stream防止冲突问题解决 start -->
			<!-- core used -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.10.1</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.10.1</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.12.7.1</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.module</groupId>
				<artifactId>jackson-module-jsonSchema</artifactId>
				<version>2.10.1</version>
			</dependency>
			<!-- chatopenai stream防止冲突问题解决 end -->

			<!-- Request Chain需要 -->
			<!-- core used -->
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>1.16.1</version>
			</dependency>
			<!-- Request Chain需要 -->

			<!-- log4j排除 start -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>99.0-does-not-exist</version>
			</dependency>
<!--			<dependency>-->
<!--				<groupId>org.apache.logging.log4j</groupId>-->
<!--				<artifactId>log4j-to-slf4j</artifactId>-->
<!--				<version>999-not-exist</version>-->
<!--			</dependency>-->
			<!-- log4j排除 end -->

			<dependency>
				<groupId>com.aliyun.odps</groupId>
				<artifactId>odps-sdk-core</artifactId>
				<version>0.46.2</version>
			</dependency>

			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>5.11.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>5.11.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>5.11.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-commons</artifactId>
				<version>1.11.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-engine</artifactId>
				<version>1.11.3</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>3.3.4</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-compiler-plugin</artifactId>-->
<!--				<version>3.8.1</version>-->
<!--				<configuration>-->
<!--					<source>17</source>-->
<!--					<target>17</target>-->
<!--				</configuration>-->
<!--			</plugin>-->

			<plugin>
				<groupId>org.sonatype.central</groupId>
				<artifactId>central-publishing-maven-plugin</artifactId>
				<version>0.8.0</version>
				<extensions>true</extensions>
				<configuration>
					<publishingServerId>central</publishingServerId>
				</configuration>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>org.sonatype.plugins</groupId>-->
<!--				<artifactId>nexus-staging-maven-plugin</artifactId>-->
<!--				<version>1.6.7</version>-->
<!--				<extensions>true</extensions>-->
<!--				<configuration>-->
<!--					<serverId>ossrh</serverId>-->
<!--					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>-->
<!--					<autoReleaseAfterClose>true</autoReleaseAfterClose>-->
<!--				</configuration>-->
<!--			</plugin>-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>attach-javadocs</id>-->
<!--						<goals>-->
<!--							<goal>jar</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>ossrh</flattenMode>
							<pomElements>
								<distributionManagement>remove</distributionManagement>
								<dependencyManagement>remove</dependencyManagement>
								<repositories>remove</repositories>
								<scm>keep</scm>
								<url>keep</url>
								<organization>resolve</organization>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>

<!--				<plugin>-->
<!--					<groupId>com.mycila</groupId>-->
<!--					<artifactId>license-maven-plugin</artifactId>-->
<!--					<version>3.0</version>-->
<!--					<configuration>-->
<!--						<header>${project.basedir}/license-header.txt</header>-->
<!--						<includes>-->
<!--							<include>**/*.java</include>-->
<!--						</includes>-->
<!--					</configuration>-->
<!--					<executions>-->
<!--						<execution>-->
<!--							<id>format-license</id>-->
<!--							<goals>-->
<!--								<goal>format</goal>-->
<!--							</goals>-->
<!--						</execution>-->
<!--						<execution>-->
<!--							<id>check-license</id>-->
<!--							<goals>-->
<!--								<goal>check</goal>-->
<!--							</goals>-->
<!--						</execution>-->
<!--					</executions>-->
<!--				</plugin>-->
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>javadoc</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>
<!--							<excludePackageNames>-->
<!--								com.alibaba.langengine.*-->
<!--							</excludePackageNames>-->
							<detectJavaApiLink>false</detectJavaApiLink>
							<doclint>none</doclint>
							<quiet>true</quiet>
						</configuration>
						<executions>
							<execution>
								<id>generate-javadocs</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
							<execution>
								<id>generate-aggregate-javadocs</id>
								<phase>package</phase>
								<goals>
									<goal>aggregate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
